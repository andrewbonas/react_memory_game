{"version":3,"sources":["components/CardData.js","components/Game.js","App.js","index.js"],"names":["cardArray","id","name","image","clicked","Game","useState","card","setCard","score","setScore","maxScore","setMaxScore","scoreRef","useRef","maxScoreRef","current","useEffect","handleClick","e","console","log","target","dataset","clickedCard","parseInt","gameReset","updateCard","document","addEventListener","removeEventListener","old","map","handleScore","shuffleCard","sort","Math","random","change","updateScore","resetScore","addScore","className","data-id","data-clicked","src","alt","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"sOA0EeA,G,MA1EG,CAChB,CACEC,GAAI,EACJC,KAAM,EACNC,MAAO,8RACPC,SAAS,GAEX,CACEH,GAAI,EACJC,KAAM,EACNC,MAAO,2SACPC,SAAS,GAEX,CACEH,GAAI,EACJC,KAAM,EACNC,MAAO,+QACPC,SAAS,GAEX,CACEH,GAAI,EACJC,KAAM,EACNC,MAAO,kRACPC,SAAS,GAEX,CACEH,GAAI,EACJC,KAAM,EACNC,MAAO,wUACPC,SAAS,GAEX,CACEH,GAAI,EACJC,KAAM,EACNC,MAAO,uTACPC,SAAS,GAEX,CACEH,GAAI,EACJC,KAAM,EACNC,MAAO,6UACPC,SAAS,GAEX,CACEH,GAAI,EACJC,KAAM,EACNC,MAAO,0OACPC,SAAS,GAEX,CACEH,GAAI,EACJC,KAAM,EACNC,MAAO,mPACPC,SAAS,GAEX,CACEH,GAAI,GACJC,KAAM,GACNC,MAAO,uTACPC,SAAS,GAEX,CACEH,GAAI,GACJC,KAAM,GACNC,MAAO,4SACPC,SAAS,GAEX,CACEH,GAAI,GACJC,KAAM,GACNC,MAAO,mRACPC,SAAS,K,OCyCEC,EA5GF,WAAO,IAAD,EACOC,mBAASN,GADhB,mBACVO,EADU,KACJC,EADI,OAESF,mBAAS,GAFlB,mBAEVG,EAFU,KAEHC,EAFG,OAGeJ,mBAAS,GAHxB,mBAGVK,EAHU,KAGAC,EAHA,KAIXC,EAAWC,mBACXC,EAAcD,mBAEpBC,EAAYC,QAAUL,EACtBE,EAASG,QAAUP,EAEnBQ,qBAAU,WACR,IAAMC,EAAc,SAACC,GACnBC,QAAQC,IAAIF,EAAEG,OAAOC,SACrB,IAAIC,EAAcC,SAASN,EAAEG,OAAOC,QAAQtB,KACN,IAAlCM,EAAKiB,EAAc,GAAGpB,QACxBsB,IAEAC,EAAWH,IAIf,OADAI,SAASC,iBAAiB,QAASX,GAC5B,WACLU,SAASE,oBAAoB,QAASZ,MAEvC,IAEH,IAAMS,EAAa,SAACH,GAClB,IAAIO,EAAG,YAAOxB,GACdC,EACEuB,EAAIC,KAAI,SAACzB,GAIP,OAHIA,EAAKL,OAASsB,IAChBjB,EAAKH,SAAU,GAEVG,MAGX0B,GAAY,GACZC,EAAYH,IAGRG,EAAc,SAACH,GACnBvB,EAAQuB,EAAII,MAAK,iBAAM,GAAMC,KAAKC,cAG9BX,EAAY,WAChBO,GAAY,GACZ,IAAIF,EAAG,YAAOxB,GACdC,EACEuB,EAAIC,KAAI,SAACzB,GAEP,OADAA,EAAKH,SAAU,EACRG,OAKP0B,EAAc,SAACK,IACJ,IAAXA,GACEvB,EAAYC,QAAUH,EAASG,SACjCuB,EAAY1B,EAASG,SAEvBwB,MACoB,IAAXF,GACTG,KAIEA,EAAW,WACf/B,GAAS,SAACD,GAAD,OAAWA,EAAQ,MAGxB+B,EAAa,WACjB9B,EAAS,IAGL6B,EAAc,SAAC9B,GACnBG,EAAYH,IAGd,OACE,gCACE,mCACE,oDACA,sBAAKiC,UAAU,cAAf,UACE,0CAAajC,KACb,8CAAiBE,WAGrB,qBAAK+B,UAAU,aAAf,SACGnC,EAAKyB,KAAI,SAACzB,GAAD,OACR,qBACEmC,UAAU,UAEVC,UAASpC,EAAKL,KACd0C,eAAcrC,EAAKH,QAJrB,SAME,qBACEuC,UAASpC,EAAKL,KACd0C,eAAcrC,EAAKH,QACnByC,IAAKtC,EAAKJ,MACV2C,IAAI,YARDvC,EAAKN,aCnFP8C,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,W","file":"static/js/main.38302898.chunk.js","sourcesContent":["const cardArray = [\n  {\n    id: 1,\n    name: 1,\n    image: 'https://avataaars.io/?avatarStyle=Transparent&topType=LongHairBun&accessoriesType=Prescription02&hairColor=Auburn&facialHairType=BeardMagestic&facialHairColor=Auburn&clotheType=CollarSweater&clotheColor=Gray01&eyeType=Default&eyebrowType=RaisedExcited&mouthType=Smile&skinColor=Light',\n    clicked: false,\n  },\n  {\n    id: 2,\n    name: 2,\n    image: 'https://avataaars.io/?avatarStyle=Transparent&topType=WinterHat4&accessoriesType=Round&hatColor=Gray01&hairColor=Black&facialHairType=MoustacheFancy&facialHairColor=Platinum&clotheType=ShirtCrewNeck&clotheColor=PastelYellow&eyeType=Cry&eyebrowType=DefaultNatural&mouthType=Tongue&skinColor=Yellow',\n    clicked: false,\n  },\n  {\n    id: 3,\n    name: 3,\n    image: 'https://avataaars.io/?avatarStyle=Transparent&topType=WinterHat1&accessoriesType=Wayfarers&hatColor=Red&facialHairType=BeardMedium&facialHairColor=BrownDark&clotheType=ShirtCrewNeck&clotheColor=Blue02&eyeType=Hearts&eyebrowType=UpDown&mouthType=Tongue&skinColor=Yellow',\n    clicked: false,\n  },\n  {\n    id: 4,\n    name: 4,\n    image: 'https://avataaars.io/?avatarStyle=Transparent&topType=LongHairNotTooLong&accessoriesType=Prescription01&hairColor=Brown&facialHairType=Blank&facialHairColor=Red&clotheType=Hoodie&clotheColor=Blue03&eyeType=Squint&eyebrowType=RaisedExcited&mouthType=Default&skinColor=Pale',\n    clicked: false,\n  },\n  {\n    id: 5,\n    name: 5,\n    image: 'https://avataaars.io/?avatarStyle=Transparent&topType=WinterHat3&accessoriesType=Prescription02&hatColor=Blue03&hairColor=BrownDark&facialHairType=MoustacheFancy&facialHairColor=Platinum&clotheType=GraphicShirt&clotheColor=Blue01&graphicType=Resist&eyeType=Surprised&eyebrowType=AngryNatural&mouthType=Tongue&skinColor=Yellow',\n    clicked: false,\n  },\n  {\n    id: 6,\n    name: 6,\n    image: 'https://avataaars.io/?avatarStyle=Transparent&topType=LongHairDreads&accessoriesType=Round&hatColor=Red&hairColor=Brown&facialHairType=MoustacheFancy&facialHairColor=Brown&clotheType=ShirtVNeck&clotheColor=Heather&graphicType=SkullOutline&eyeType=Wink&eyebrowType=FlatNatural&mouthType=Grimace&skinColor=Pale',\n    clicked: false,\n  },\n  {\n    id: 7,\n    name: 7,\n    image: 'https://avataaars.io/?avatarStyle=Transparent&topType=WinterHat3&accessoriesType=Sunglasses&hatColor=PastelOrange&hairColor=BlondeGolden&facialHairType=BeardMedium&facialHairColor=BrownDark&clotheType=GraphicShirt&clotheColor=Blue03&graphicType=Pizza&eyeType=Happy&eyebrowType=SadConcernedNatural&mouthType=Tongue&skinColor=Yellow',\n    clicked: false,\n  },\n  {\n    id: 8,\n    name: 8,\n    image: 'https://avataaars.io/?avatarStyle=Transparent&topType=LongHairBigHair&accessoriesType=Blank&hairColor=Blonde&facialHairType=Blank&clotheType=Hoodie&clotheColor=Heather&eyeType=Side&eyebrowType=Default&mouthType=Smile&skinColor=Pale',\n    clicked: false,\n  },\n  {\n    id: 9,\n    name: 9,\n    image: 'https://avataaars.io/?avatarStyle=Transparent&topType=ShortHairShortWaved&accessoriesType=Blank&hairColor=Brown&facialHairType=Blank&clotheType=ShirtCrewNeck&clotheColor=Blue03&eyeType=Side&eyebrowType=Default&mouthType=Smile&skinColor=Pale',\n    clicked: false,\n  },\n  {\n    id: 10,\n    name: 10,\n    image: 'https://avataaars.io/?avatarStyle=Transparent&topType=LongHairStraightStrand&accessoriesType=Prescription01&hairColor=BrownDark&facialHairType=BeardMedium&facialHairColor=Blonde&clotheType=GraphicShirt&clotheColor=Black&graphicType=Skull&eyeType=Cry&eyebrowType=RaisedExcited&mouthType=Smile&skinColor=Yellow',\n    clicked: false,\n  },\n  {\n    id: 11,\n    name: 11,\n    image: 'https://avataaars.io/?avatarStyle=Transparent&topType=ShortHairShortWaved&accessoriesType=Blank&hairColor=PastelPink&facialHairType=BeardMedium&facialHairColor=BlondeGolden&clotheType=ShirtVNeck&clotheColor=Blue03&eyeType=EyeRoll&eyebrowType=RaisedExcitedNatural&mouthType=Grimace&skinColor=Yellow',\n    clicked: false,\n  },\n  {\n    id: 12,\n    name: 12,\n    image: 'https://avataaars.io/?avatarStyle=Transparent&topType=LongHairDreads&accessoriesType=Prescription02&hairColor=Red&facialHairType=BeardLight&facialHairColor=Red&clotheType=ShirtVNeck&clotheColor=White&eyeType=Default&eyebrowType=FlatNatural&mouthType=Default&skinColor=Pale',\n    clicked: false,\n  },\n];\nexport default cardArray;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"../styles/Game.css\";\nimport cardArray from \"./CardData\";\n\nconst Game = () => {\n  const [card, setCard] = useState(cardArray);\n  const [score, setScore] = useState(0);\n  const [maxScore, setMaxScore] = useState(0);\n  const scoreRef = useRef();\n  const maxScoreRef = useRef();\n\n  maxScoreRef.current = maxScore;\n  scoreRef.current = score;\n\n  useEffect(() => {\n    const handleClick = (e) => {\n      console.log(e.target.dataset);\n      let clickedCard = parseInt(e.target.dataset.id);\n      if (card[clickedCard - 1].clicked === true) {\n        gameReset();\n      } else {\n        updateCard(clickedCard);\n      }\n    };\n    document.addEventListener(\"click\", handleClick);\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const updateCard = (clickedCard) => {\n    let old = [...card];\n    setCard(\n      old.map((card) => {\n        if (card.name === clickedCard) {\n          card.clicked = true;\n        }\n        return card;\n      })\n    );\n    handleScore(true);\n    shuffleCard(old);\n  };\n\n  const shuffleCard = (old) => {\n    setCard(old.sort(() => 0.5 - Math.random()));\n  };\n\n  const gameReset = () => {\n    handleScore(false);\n    let old = [...card];\n    setCard(\n      old.map((card) => {\n        card.clicked = false;\n        return card;\n      })\n    );\n  };\n\n  const handleScore = (change) => {\n    if (change === false) {\n      if (maxScoreRef.current < scoreRef.current) {\n        updateScore(scoreRef.current);\n      }\n      resetScore();\n    } else if (change === true) {\n      addScore();\n    }\n  };\n\n  const addScore = () => {\n    setScore((score) => score + 1);\n  };\n\n  const resetScore = () => {\n    setScore(0);\n  };\n\n  const updateScore = (score) => {\n    setMaxScore(score);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>React Memory Game </h1>\n        <div className=\"score-board\">\n          <div>Score: {score}</div>\n          <div>Max Score: {maxScore}</div>\n        </div>\n      </header>\n      <div className=\"avatar-ctn\">\n        {card.map((card) => (\n          <div\n            className=\"avatars\"\n            key={card.id}\n            data-id={card.name}\n            data-clicked={card.clicked}\n          >\n            <img\n              data-id={card.name}\n              data-clicked={card.clicked}\n              src={card.image}\n              alt=\"Avatar\"\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\nimport \"./styles/App.css\";\nimport Game from \"./components/Game\";\n\nconst App = () => {\n  return (\n    <div>\n      <Game />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}